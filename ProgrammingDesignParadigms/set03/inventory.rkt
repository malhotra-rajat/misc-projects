#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 69 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 148 0 211 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 3505 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 181
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname inve"
 #"ntory) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t "
 #"constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 16 #"rackunit/text-ui"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 26 #"inventory-potential-profit"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 22 #"inventory-total-volume"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 13 #"fillable-now?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 21 #"inventory-after-order"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 15 #"increase-prices"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 9 #"make-book"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 16 #"reorder-present?"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 11 #"; CONSTANTS"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 7 #"HUNDRED"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 18 #"; DATA DEFINITIONS"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 26 #"; A MaybeNumber is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; -- Number"
0 0 23 29 1 #"\n"
0 0 17 3 10 #"; -- false"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; TEMPLATE:"
0 0 23 29 1 #"\n"
0 0 17 3 36 #"; maybenumber-fn : MaybeNumber -> ??"
0 0 23 29 1 #"\n"
0 0 17 3 30 #"; (define (maybenumber-fn mbn)"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";   [(number? mbn) ...]"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";   [else false])) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 7 #"reorder"
0 0 23 3 2 #" ("
0 0 14 3 10 #"no-of-days"
0 0 23 3 1 #" "
0 0 14 3 12 #"no-of-copies"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; A ReorderStatus is one of:"
0 0 23 29 1 #"\n"
0 0 17 3 56 #"; -- false                            interp: no reorder"
0 0 23 29 1 #"\n"
0 0 17 3 65
#"; -- (make-reorder PosInt PosInt)     interp: no reorder present "
0 0 23 29 1 #"\n"
0 0 17 3 50 #";                                             with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"values"
0 0 17 3 15 #" of no-of-days "
0 0 23 29 1 #"\n"
0 0 17 3 68
#";                                             days and no-of-copies."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #"; A ReorderStatus is a (make-reorder Number Number)"
0 0 23 29 1 #"\n"
0 0 17 3 62
#"; -- no-of-days is the number of days the shipment will arrive"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #"; -- no-of-copies is the number of copies of the book that will arri"
 #"ve"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; TEMPLATE:"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; reorder-fn : ReorderStatus -> ??"
0 0 23 29 1 #"\n"
0 0 17 3 25 #"; (define (reorder-fn rs)"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";  (cond"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";   [(false? rs) ....]"
0 0 23 29 1 #"\n"
0 0 17 3 32 #";   [else (... (reorder-days rs)"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";              (reorder-ncopies rs))]))   "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 4 #"book"
0 0 23 3 2 #" ("
0 0 14 3 4 #"isbn"
0 0 23 3 1 #" "
0 0 14 3 5 #"title"
0 0 23 3 1 #" "
0 0 14 3 6 #"author"
0 0 23 3 1 #" "
0 0 14 3 9 #"publisher"
0 0 23 3 1 #" "
0 0 14 3 10 #"unit-price"
0 0 23 3 1 #" "
0 0 14 3 9 #"unit-cost"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 7 #"on-hand"
0 0 23 3 1 #" "
0 0 14 3 7 #"reorder"
0 0 23 3 1 #" "
0 0 14 3 4 #"cuft"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #"; A Book is a (make-book Number String String String Number Number N"
 #"umber"
) 0 0 23 29 1 #"\n"
0 0 17 3 46 #";                        ReorderStatus Number)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 48 #"; -- isbn is the unique identifier for this book"
0 0 23 29 1 #"\n"
0 0 17 3 35 #"; -- title is the title of the book"
0 0 23 29 1 #"\n"
0 0 17 3 36 #"; -- author is the title of the book"
0 0 23 29 1 #"\n"
0 0 17 3 39 #"; -- publisher is the title of the book"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; -- unit-price is the price at which we sell the book"
0 0 23 29 1 #"\n"
0 0 17 3 55 #"; -- unit-cost is the cost of the book to the bookstore"
0 0 23 29 1 #"\n"
0 0 17 3 44 #"; -- on-hand is the number of copies on hand"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; -- reorder represents the ReorderStatus information "
0 0 23 29 1 #"\n"
0 0 17 3 17 #";    for the book"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #"; -- cuft is the volume taken up by one unit of this item, in cubic "
 #"feet"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; TEMPLATE:"
0 0 23 29 1 #"\n"
0 0 17 3 22 #"; book-fn : Book -> ??"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; (define (book-fn b)"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";  (..."
0 0 23 29 1 #"\n"
0 0 17 3 17 #";   (book-isbn b)"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";   (book-title b)"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";   (book-author b)"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";   (book-publisher b)"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";   (book-unit-price b)"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";   (book-unit-cost b)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";   (book-on-hand b)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";   (book-reorder b)"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";   (book-cuft b)))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 33 #"; An Inventory is a list of Books"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 24 #"; An Inventory is either"
0 0 23 29 1 #"\n"
0 0 17 3 10 #"; -- empty"
0 0 23 29 1 #"\n"
0 0 17 3 26 #"; -- (cons Book Inventory)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; TEMPLATE:"
0 0 23 29 1 #"\n"
0 0 17 3 32 #"; inventory-fn : Inventory -> ??"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; (define (inventory-fn inv)"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";   (cond"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";     [(empty? inv) ...]"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";     [else (..."
0 0 23 29 1 #"\n"
0 0 17 3 35 #";             (book-fn (first inv))"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";             (line-item-fn (first inv))"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";             (inventory-fn (rest inv)))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 9 #"line-item"
0 0 23 3 2 #" ("
0 0 14 3 4 #"isbn"
0 0 23 3 1 #" "
0 0 14 3 8 #"quantity"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 49 #"; A Line-item is a (make-line-item Number Number)"
0 0 23 29 1 #"\n"
0 0 17 3 47 #"; -- isbn is the unique identifier for the book"
0 0 23 29 1 #"\n"
0 0 17 3 46 #"; -- quantity is the quantity of books ordered"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; TEMPLATE:"
0 0 23 29 1 #"\n"
0 0 17 3 32 #"; line-item-fn : Line-item -> ??"
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; (define (line-item-fn le)"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";  (..."
0 0 23 29 1 #"\n"
0 0 17 3 23 #";   (line-item-isbn le)"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";   (line-item-quantity le))) "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; An Order is a list of Line-items"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #"; An Order is either"
0 0 23 29 1 #"\n"
0 0 17 3 10 #"; -- empty"
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; -- (cons Line-item Order)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; TEMPLATE:"
0 0 23 29 1 #"\n"
0 0 17 3 24 #"; order-fn : order -> ??"
0 0 23 29 1 #"\n"
0 0 17 3 22 #"; (define (order-fn o)"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";   (cond"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";     [(empty? o) ...]"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";     [else (..."
0 0 23 29 1 #"\n"
0 0 17 3 23 #";             (first o)"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";             (order-fn (rest o)))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 23 29 1 #"\n"
0 0 17 3 22 #"; FUNCTION DEFINITIONS"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 43 #"; make-empty-reorder : Any -> ReorderStatus"
0 0 23 29 1 #"\n"
0 0 17 3 18 #"; GIVEN: Any input"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #"; RETURNS: a ReorderStatus showing no pending re-order (ignores the "
 #"argument) "
) 0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; STRATEGY: Domain Knowledge"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 14 3 3 #"any"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 48 #"\"make-empty-reorder should return a value false\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 38 #"; book-profit-on-hand : Book -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 15 #"; GIVEN: A Book"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #"; RETURNS: The potential profit of all the copies in the inventory a"
 #"re sold "
) 0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 47 #"; STRATEGY: Structural Decomposition on b: Book"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"book-profit-on-hand"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 12 #"book-on-hand"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #")("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 15 #"book-unit-price"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 14 #"book-unit-cost"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #"; Example for testsing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"book1"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book1\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Rajat\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 4 #"28.5"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"book-profit-on-hand"
0 0 23 3 1 #" "
0 0 14 3 5 #"book1"
0 0 23 3 2 #") "
0 0 20 3 3 #"100"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 58
#"\"Profit on book1 should be 100 because profit on each book"
0 0 19 29 1 #"\n"
0 0 19 3 45 #"               is 10 and there are 10 copies\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 51 #"; inventory-potential-profit : Inventory ->  Number"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; GIVEN: an inventory"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #"; RETURNS: the total profit for all the items in stock (i.e., how mu"
 #"ch"
) 0 0 23 29 1 #"\n"
0 0 17 3 60
#";          the bookstore would profit if it sold every book "
0 0 23 29 1 #"\n"
0 0 17 3 29 #";          in the inventory)."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; STRATEGY: Structural Decomposition on inv: Inventory"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 26 #"inventory-potential-profit"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 19 #"book-profit-on-hand"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 26 #"inventory-potential-profit"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; Example for testing"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book1\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Rajat\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"28.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book2\""
0 0 23 3 1 #" "
0 0 19 3 8 #"\"Hardik\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"29.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book3\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Ishan\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher2\""
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 4 #"30.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book4\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Bansi\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher3\""
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 4 #"31.5"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 26 #"inventory-potential-profit"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 20 3 4 #"1100"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 41 #"\"Total potential profit on all the books "
0 0 19 29 1 #"\n"
0 0 19 3 40 #"               in the inventory is 1100\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #"; inventory-total-volume : Inventory -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; GIVEN: an Inventory"
0 0 23 29 1 #"\n"
0 0 17 3 67
#"; RETURNS: the total volume needed to store all the books in stock."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; STRATEGY: Structural Decomposition on inv: Inventory"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 22 #"inventory-total-volume"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 9 #"book-cuft"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 4 #")) ("
0 0 14 3 12 #"book-on-hand"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 14 3 1 #"v"
0 0 23 3 4 #"))) "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 22 #"inventory-total-volume"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 22 #"inventory-total-volume"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 20 3 4 #"1505"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 56
#"\"Total volume of all the books in the inventory is 1505\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 57 #"; price-for-line-item : Inventory LineItem -> MaybeNumber"
0 0 23 29 1 #"\n"
0 0 17 3 37 #"; GIVEN: an inventory and a line item"
0 0 23 29 1 #"\n"
0 0 17 3 68
#"; RETURNS: the price for that line item (the quantity times the unit"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";          price for that item).  "
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";          Returns false if that isbn does not exist in the inventor"
 #"y."
) 0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; STRATEGY: Structural Decomposition on inv: Inventory"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 14 #"line-item-isbn"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 18 #"line-item-quantity"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 3 #") ("
0 0 14 3 15 #"book-unit-price"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 2 #"le"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 25 #"price-for-line-item-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 20 3 3 #"200"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #")) "
0 0 20 3 3 #"150"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 25 #"price-for-line-item-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 55 #"; line-item-fillable? : Line-item Inventory -> Boolean."
0 0 23 29 1 #"\n"
0 0 17 3 38 #"; GIVEN: an Line-item and an inventory"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #"; RETURNS: true iff there are enough copies of the book on hand to f"
 #"ill"
) 0 0 23 29 1 #"\n"
0 0 17 3 53 #";          the Line-item.  If the book is not in the "
0 0 23 29 1 #"\n"
0 0 17 3 57 #";          inventory, then the Line-item is not fillable."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; Strategy: Structural Decomposition on inv: Inventory"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 14 #"line-item-isbn"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 24 #"                       ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 18 #"line-item-quantity"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 3 #") ("
0 0 14 3 12 #"book-on-hand"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 53 #"                                                    ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 4 #"true"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"false"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"le1"
0 0 23 3 3 #"  ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"le2"
0 0 23 3 3 #"  ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 24 #"line-item-fillable-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 1 #" "
0 0 14 3 3 #"le1"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"le1"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 8 #"fillable"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 5 #" inv1"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 1 #" "
0 0 14 3 3 #"le2"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"le2"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 8 #"fillable"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 5 #" inv1"
0 0 19 3 1 #"\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 24 #"line-item-fillable-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #"; fillable-now? : Order Inventory -> Boolean."
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; GIVEN: an order and an inventory"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #"; RETURNS: true iff there are enough copies of each book on hand to "
 #"fill"
) 0 0 23 29 1 #"\n"
0 0 17 3 64
#";          the order.  If the order contains a book that is not "
0 0 23 29 1 #"\n"
0 0 17 3 60
#";          in the inventory, then the order is not fillable."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 48 #"; STRATEGY: Structural Decomposition on o: Order"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                          "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                   "
0 0 14 3 5 #"false"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #"; Example for order"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"order1"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 18 #"fillable-now-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 23 3 1 #" "
0 0 14 3 6 #"order1"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 6 #"order1"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 8 #"fillable"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 4 #"inv1"
0 0 19 3 1 #" "
0 0 19 3 7 #"because"
0 0 19 3 1 #" "
0 0 19 3 9 #"line-item"
0 0 19 3 1 #" "
0 0 19 3 4 #"with"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 17 #"                 "
0 0 19 3 4 #"isbn"
0 0 19 3 1 #" "
0 0 19 3 1 #"3"
0 0 19 3 1 #" "
0 0 19 3 8 #"contains"
0 0 19 3 1 #" "
0 0 19 3 8 #"quantity"
0 0 19 3 1 #" "
0 0 19 3 1 #"2"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"book"
0 0 19 3 1 #" "
0 0 19 3 5 #"which"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 17 #"                 "
0 0 19 3 9 #"available"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 10 #" inventory"
0 0 19 3 1 #"\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 18 #"fillable-now-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #"; reorder-present? : ReorderStatus -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 24 #"; GIVEN: a ReorderStatus"
0 0 23 29 1 #"\n"
0 0 17 3 50 #"; RETURNS: true iff the ReorderStatus is not empty"
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 28 #"; STRATEGY: Domain Knowledge"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 23 3 1 #" "
0 0 14 3 2 #"rs"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"   [("
0 0 14 3 6 #"false?"
0 0 23 3 1 #" "
0 0 14 3 2 #"rs"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 2 #" ]"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 3 #"]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 21 #"reorder-present-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 23 3 2 #" ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 5 #"empty"
0 0 19 3 1 #" "
0 0 19 3 7 #"reorder"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 6 #" false"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 23 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 9 #"non-empty"
0 0 19 3 1 #" "
0 0 19 3 7 #"reorder"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 5 #" true"
0 0 19 3 1 #"\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 21 #"reorder-present-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 70
(
 #"days-til-fillable-check-copies-if-reorder : Book Number -> MaybeNumb"
 #"er"
) 0 0 23 29 1 #"\n"
0 0 17 3 53 #"; GIVEN: a Book and a quantity of books to be ordered"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #"; RETURNS: If the quantity of books to be ordered is less than or eq"
 #"ual to "
) 0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";          the number of books expected to arrive, then return the n"
 #"umber "
) 0 0 23 29 1 #"\n"
0 0 17 3 47 #";          of days when the reorder will arrive"
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 50 #"; STRATEGY: Structural Decomposition on b: Book   "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 8 #"days-til"
0 0 14 3 33 #"-fillable-check-copies-if-reorder"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 8 #"quantity"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 23 3 2 #" ("
0 0 14 3 12 #"book-reorder"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 12 #"           ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 8 #"quantity"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 12 #"book-on-hand"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 28 #"                           ("
0 0 14 3 20 #"reorder-no-of-copies"
0 0 23 3 2 #" ("
0 0 14 3 12 #"book-reorder"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 5 #")))))"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"      ("
0 0 14 3 18 #"reorder-no-of-days"
0 0 23 3 2 #" ("
0 0 14 3 12 #"book-reorder"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 14 3 5 #"false"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; example for testing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"book9"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"Book1"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"Rajat"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 11 #"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 6          10 4 5 #"57/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 41 #"days-til-fillable-check-copies-if-reorder"
0 0 23 3 1 #" "
0 0 14 3 5 #"book9"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 53 #"\"false should be returned because only 18 copies will"
0 0 19 29 1 #"\n"
0 0 19 3 40 #"               be available in 10 days.\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 66
#"; days-til-fillable-line-item : Line-item Inventory -> MaybeNumber"
0 0 23 29 1 #"\n"
0 0 17 3 37 #"; GIVEN: a Line-item and an Inventory"
0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #"; RETURNS: the number of days until the Line-item is fillable, assum"
 #"ing all"
) 0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";          the shipments come in on time.  Returns false if there wo"
 #"n't "
) 0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";          be enough copies of the book, even after the next shipmen"
 #"t"
) 0 0 23 29 1 #"\n"
0 0 17 3 33 #";          of that book comes in."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 57 #"; STRATEGY: Structural Decomposition on inv: Inventory   "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 14 #"line-item-isbn"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 41 #"days-til-fillable-check-copies-if-reorder"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #") ("
0 0 14 3 18 #"line-item-quantity"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 4 #"ZERO"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"le5"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 2 #"23"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"le6"
0 0 23 3 2 #" ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 2 #"23"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 33 #"days-til-fillable-line-item-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"le5"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 1 #" "
0 0 19 3 1 #"6"
0 0 19 3 1 #" "
0 0 19 3 5 #"since"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 1 #"6"
0 0 19 3 1 #" "
0 0 19 3 4 #"days"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 15 #"               "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"book"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 4 #"hand"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 5 #"reach"
0 0 19 3 3 #" 23"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"le6"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 1 #" "
0 0 19 3 5 #"false"
0 0 19 3 1 #" "
0 0 19 3 7 #"because"
0 0 19 3 1 #" "
0 0 19 3 4 #"even"
0 0 19 3 1 #" "
0 0 19 3 5 #"after"
0 0 19 29 1 #"\n"
0 0 19 3 15 #"               "
0 0 19 3 7 #"reorder"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"book"
0 0 19 3 1 #" "
0 0 19 3 2 #"on"
0 0 19 3 1 #" "
0 0 19 3 4 #"hand"
0 0 19 3 1 #" "
0 0 19 3 4 #"will"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 5 #"reach"
0 0 19 3 3 #" 23"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"le6"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 1 #" "
0 0 19 3 5 #"false"
0 0 19 3 1 #" "
0 0 19 3 7 #"because"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 15 #"               "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"inventory"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 6 #" empty"
0 0 19 3 1 #"\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 33 #"days-til-fillable-line-item-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 52 #"; days-til-fillable : Order Inventory -> MaybeNumber"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; GIVEN: an order and an inventory"
0 0 23 29 1 #"\n"
0 0 17 3 59
#"; RETURNS: the number of days until the order is fillable, "
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";          assuming all the shipments come in on time.  Returns fals"
 #"e if "
) 0 0 23 29 1 #"\n"
0 0 17 3 54 #";          there won't be enough copies of some book, "
0 0 23 29 1 #"\n"
0 0 17 3 62
#";          even after the next shipment of that book comes in."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 48 #"; STRATEGY: Structural Decomposition on o: Order"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 23 3 2 #" ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 7 #"number?"
0 0 23 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 3 #"max"
0 0 23 3 2 #" ("
0 0 14 3 27 #"days-til-fillable-line-item"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 23 #"                      ("
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 4 #"ZERO"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"order2"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 23 #"days-til-fillable-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 1 #" "
0 0 14 3 6 #"order1"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 1 #" "
0 0 19 3 1 #"5"
0 0 19 3 1 #" "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 6 #"order1"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 4 #"inv1"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 7 #" passed"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 1 #" "
0 0 14 3 6 #"order2"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 1 #" "
0 0 19 3 5 #"false"
0 0 19 3 1 #" "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 6 #"order2"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 4 #"inv1"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 7 #" passed"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 2 #") "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 19 3 1 #"\""
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 8 #"function"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 6 #"return"
0 0 19 3 6 #" ZERO "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 5 #"empty"
0 0 19 3 1 #" "
0 0 19 3 5 #"order"
0 0 19 3 1 #" "
0 0 19 3 2 #"is"
0 0 19 3 7 #" passed"
0 0 19 3 1 #"\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 23 #"days-til-fillable-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #"; price-for-order : Inventory Order -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; GIVEN: An Inventory and an Order"
0 0 23 29 1 #"\n"
0 0 17 3 67
#"; RETURNS: the total price for the given order.  The price does not"
0 0 23 29 1 #"\n"
0 0 17 3 67
#";          depend on whether any particular line item is in stock. "
0 0 23 29 1 #"\n"
0 0 17 3 63
#";          Line-items for an ISBN that is not in the inventory "
0 0 23 29 1 #"\n"
0 0 17 3 22 #";          count as 0."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 48 #"; STRATEGY: Structural Decomposition on o: Order"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 23 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 3 #")) "
0 0 23 29 1 #"\n"
0 0 23 3 22 #"                     ("
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 2 #"  "
0 0 14 3 1 #"o"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"order3"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 21 #"price-for-order-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 1 #" "
0 0 14 3 6 #"order2"
0 0 23 3 2 #") "
0 0 20 3 4 #"5290"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 5 #"price"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 6 #"order2"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 5 #" 5290"
0 0 19 3 1 #"\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 2 #") "
0 0 14 3 4 #"ZERO"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 5 #"price"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 5 #"empty"
0 0 19 3 1 #" "
0 0 19 3 5 #"order"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 6 #" ZERO\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"price-for-order"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 1 #" "
0 0 14 3 6 #"order3"
0 0 23 3 2 #") "
0 0 20 3 4 #"2290"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 5 #"price"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 6 #"order3"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 5 #" 2290"
0 0 19 3 1 #"\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 21 #"price-for-order-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 44 #"; book-after-line-item : Book Number -> Book"
0 0 23 29 1 #"\n"
0 0 17 3 51 #"; GIVEN: A book and a the quantity of books ordered"
0 0 23 29 1 #"\n"
0 0 17 3 62
#"; RETURNS: the books left after the line-item has been filled."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 47 #"; STRATEGY: Structural Decomposition on b: Book"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 20 #"book-after-line-item"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 8 #"quantity"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 4 #"   ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 9 #"book-isbn"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 10 #"book-title"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 11 #"book-author"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 14 #"book-publisher"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 15 #"book-unit-price"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 14 #"book-unit-cost"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 12 #"book-on-hand"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #") "
0 0 14 3 8 #"quantity"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"     ("
0 0 14 3 12 #"book-reorder"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 9 #"book-cuft"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; example for testing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"book4"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 6 #"\"Book1"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 6 #"\"Rajat"
0 0 19 3 1 #"\""
0 0 23 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 11 #"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 6          10 63 5 #"57/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 20 #"book-after-line-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"book1"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 14 3 5 #"book4"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 44 #"\"book4 should be returned if input is book1\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 62
#"; inventory-after-line-item : Inventory Line-item -> Inventory"
0 0 23 29 1 #"\n"
0 0 17 3 37 #"; GIVEN: An Inventory and a Line-item"
0 0 23 29 1 #"\n"
0 0 17 3 61
#"; RETURNS: the inventory after the line-item has been filled."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; STRATEGY: Structural Decomposition on inv: Inventory"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 25 #"inventory-after-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 19 #"line-item-fillable?"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 14 #"line-item-isbn"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 17 #"                 "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 20 #"book-after-line-item"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #") ("
0 0 14 3 18 #"line-item-quantity"
0 0 23 3 1 #" "
0 0 14 3 2 #"le"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 25 #"inventory-after-line-item"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 2 #"le"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 18 #"                  "
0 0 23 29 1 #"\n"
0 0 23 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #") ("
0 0 14 3 25 #"inventory-after-line-item"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 37 #"                                    ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 2 #"le"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 14 3 3 #"inv"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 3 #"le3"
0 0 23 3 3 #"  ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; example for testing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv2"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book1\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Rajat\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"28.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book2\""
0 0 23 3 1 #" "
0 0 19 3 8 #"\"Hardik\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"29.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book3\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Ishan\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher2\""
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 4 #"30.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book4\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Bansi\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher3\""
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 4 #"31.5"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 31 #"inventory-after-line-item-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 25 #"inventory-after-line-item"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 1 #" "
0 0 14 3 3 #"le3"
0 0 23 3 2 #") "
0 0 14 3 4 #"inv2"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 4 #"inv2"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 8 #"returned"
0 0 19 3 1 #" "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 9 #"arguments"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 1 #" "
0 0 19 3 4 #"inv2"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 25 #"                 and le3\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 25 #"inventory-after-line-item"
0 0 23 3 1 #" "
0 0 14 3 5 #"empty"
0 0 23 3 1 #" "
0 0 14 3 3 #"le3"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 5 #"empty"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 2 #"be"
0 0 19 3 1 #" "
0 0 19 3 8 #"returned"
0 0 19 3 1 #" "
0 0 19 3 4 #"when"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"input"
0 0 19 3 1 #" "
0 0 19 3 9 #"inventory"
0 0 19 29 1 #"\n"
0 0 19 3 25 #"                is empty\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 31 #"inventory-after-line-item-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 17 3 55 #"; inventory-after-order : Inventory Order -> Inventory."
0 0 23 29 1 #"\n"
0 0 17 3 17 #"; GIVEN: an order"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; WHERE: the order is fillable now"
0 0 23 29 1 #"\n"
0 0 17 3 57 #"; RETURNS: the inventory after the order has been filled."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 48 #"; STRATEGY: Structural Decomposition on o: Order"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 21 #"inventory-after-order"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 21 #"inventory-after-order"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 25 #"inventory-after-line-item"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 1 #"o"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"      "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #"; examples for testing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 6 #"order4"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 20 3 2 #"12"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"make-line-item"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 20 3 2 #"19"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv4"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book1\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Rajat\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"28.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book2\""
0 0 23 3 1 #" "
0 0 19 3 8 #"\"Hardik\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 1 #"8"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"29.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book3\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Ishan\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher2\""
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 4 #"30.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book4\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Bansi\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher3\""
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 4 #"31.5"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 27 #"inventory-after-order-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 21 #"inventory-after-order"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 1 #" "
0 0 14 3 6 #"order4"
0 0 23 3 2 #") "
0 0 14 3 4 #"inv4"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 1 #"\""
0 0 19 3 4 #"inv4"
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 3 #" be"
0 0 19 3 1 #" "
0 0 19 3 8 #"returned"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 5 #"input"
0 0 19 3 1 #" "
0 0 19 3 4 #"inv1"
0 0 19 29 1 #"\n"
0 0 19 3 28 #"                 and order1\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 27 #"inventory-after-order-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 44 #"; increase-prices-book : Book Number -> Book"
0 0 23 29 1 #"\n"
0 0 17 3 32 #"; GIVEN: A Book and a percentage"
0 0 23 29 1 #"\n"
0 0 17 3 68
#"; RETURNS: a book like the original, except that the unit price has "
0 0 23 29 1 #"\n"
0 0 17 3 49 #";          increased by the specified percentage."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 47 #"; STRATEGY: Structural Decomposition on b: Book"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 20 #"increase-prices-book"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 4 #"perc"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"book-isbn"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 10 #"book-title"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 11 #"book-author"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 14 #"book-publisher"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 15 #"book-unit-price"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 7 #"HUNDRED"
0 0 23 3 1 #" "
0 0 14 3 4 #"perc"
0 0 23 3 2 #") "
0 0 14 3 7 #"HUNDRED"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 14 #"book-unit-cost"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 12 #"book-on-hand"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 12 #"book-reorder"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"book-cuft"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; example for testing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 5 #"book2"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book1\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Rajat\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"44"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 29 1 #"\n"
0 0 23 3 26 #"                         ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 6          10 63 5 #"57/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 20 #"increase-prices-book"
0 0 23 3 1 #" "
0 0 14 3 5 #"book1"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 14 3 5 #"book2"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"              "
0 0 19 3 50 #"\"after increasing price, book2 should be returned\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 56 #"; increase-prices : Inventory String Number -> Inventory"
0 0 23 29 1 #"\n"
0 0 17 3 53 #"; GIVEN: an inventory, a publisher, and a percentage,"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #"; RETURNS: an inventory like the original, except that all items by "
 #"that"
) 0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";          publisher have their unit prices increased by the specifi"
 #"ed"
) 0 0 23 29 1 #"\n"
0 0 17 3 22 #";          percentage."
0 0 23 29 1 #"\n"
0 0 17 3 27 #"; EXAMPLES: See tests below"
0 0 23 29 1 #"\n"
0 0 17 3 54 #"; STRATEGY: Structural Decomposition on inv: Inventory"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"increase-prices"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 1 #" "
0 0 14 3 3 #"pub"
0 0 23 3 1 #" "
0 0 14 3 4 #"perc"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 4 #" [ ("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 3 #"inv"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 23 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 23 3 1 #" "
0 0 14 3 3 #"pub"
0 0 23 3 2 #" ("
0 0 14 3 14 #"book-publisher"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 20 #"increase-prices-book"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 4 #"perc"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 20 #"                   ("
0 0 14 3 15 #"increase-prices"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 3 #"pub"
0 0 23 3 1 #" "
0 0 14 3 4 #"perc"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 3 #") ("
0 0 14 3 15 #"increase-prices"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"inv"
0 0 23 3 2 #") "
0 0 14 3 3 #"pub"
0 0 23 3 1 #" "
0 0 14 3 4 #"perc"
0 0 23 3 6 #")))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #"; TESTS"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 21 #"; example for testing"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv6"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book1\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Rajat\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"44"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"28.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book2\""
0 0 23 3 1 #" "
0 0 19 3 8 #"\"Hardik\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"55"
0 0 23 3 1 #" "
0 0 20 3 2 #"40"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 18 #"make-empty-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 4 #"29.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book3\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Ishan\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher2\""
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 4 #"30.5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 9 #"make-book"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Book4\""
0 0 23 3 1 #" "
0 0 19 3 7 #"\"Bansi\""
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher3\""
0 0 23 3 1 #" "
0 0 20 3 2 #"70"
0 0 23 3 1 #" "
0 0 20 3 2 #"30"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"               ("
0 0 14 3 12 #"make-reorder"
0 0 23 3 1 #" "
0 0 20 3 1 #"6"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 4 #"31.5"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 17 #"define-test-suite"
0 0 23 3 1 #" "
0 0 14 3 21 #"increase-prices-tests"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 23 3 2 #" ("
0 0 14 3 15 #"increase-prices"
0 0 23 3 1 #" "
0 0 14 3 4 #"inv1"
0 0 23 3 1 #" "
0 0 19 3 12 #"\"Publisher1\""
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 2 #") "
0 0 14 3 4 #"inv6"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 16 #"                "
0 0 19 3 5 #"\"inv6"
0 0 19 3 43 #" should be returned if the inputs are inv1,"
0 0 19 29 1 #"\n"
0 0 19 3 35 #"                 Publisher1 and 10\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 23 3 1 #" "
0 0 14 3 21 #"increase-prices-tests"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0           0
